package pl.skeleton.composites;

import org.dussan.vaadin.dcharts.DCharts;
import org.dussan.vaadin.dcharts.base.elements.Trendline;
import org.dussan.vaadin.dcharts.base.elements.XYaxis;
import org.dussan.vaadin.dcharts.data.DataSeries;
import org.dussan.vaadin.dcharts.metadata.TooltipAxes;
import org.dussan.vaadin.dcharts.metadata.XYaxes;
import org.dussan.vaadin.dcharts.metadata.locations.TooltipLocations;
import org.dussan.vaadin.dcharts.metadata.renderers.AxisRenderers;
import org.dussan.vaadin.dcharts.options.Axes;
import org.dussan.vaadin.dcharts.options.Cursor;
import org.dussan.vaadin.dcharts.options.Highlighter;
import org.dussan.vaadin.dcharts.options.Options;
import org.dussan.vaadin.dcharts.options.SeriesDefaults;
import org.dussan.vaadin.dcharts.renderers.tick.AxisTickRenderer;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class QuadraticEquationComposite extends CustomComponent {
	private static final long serialVersionUID = -2525311301649476466L;

	private DCharts chart;
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private DCharts dCharts_1;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private Button button_1;
	@AutoGenerated
	private TextField textCValue;
	@AutoGenerated
	private TextField textBValue;
	@AutoGenerated
	private TextField textAValue;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public QuadraticEquationComposite() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.button_1 = new Button("Print chart");
		this.button_1.addClickListener(new ClickListener() {
			private static final long serialVersionUID = 624050025547626225L;

			@Override
			public void buttonClick(ClickEvent event) {
				Double a = Double.parseDouble(textAValue.getValue());
				Double b = Double.parseDouble(textBValue.getValue());
				Double c = Double.parseDouble(textCValue.getValue());
				printChart(a, b, c);
			}
		});
	}

	private void printChart(Double a, Double b, Double c) {
		DataSeries dataSeries = new DataSeries().newSeries().add("23-May-08", 1)
				.add("24-May-08", 4)
		    	.add("25-May-08", 2)
		    	.add("26-May-08", 6);

		SeriesDefaults seriesDefaults = new SeriesDefaults().setTrendline(new Trendline().setShow(true));
		
		Axes axes = new Axes().addAxis(new XYaxis()
		.setRenderer(AxisRenderers.DATE)
		.setTickOptions(
			new AxisTickRenderer()
				.setFormatString("%#m/%#d/%y"))
				.setNumberTicks(4))
		.addAxis(
		new XYaxis(XYaxes.Y)
		.setTickOptions(
		new AxisTickRenderer()
			.setFormatString("$%.2f")));
		
		Highlighter highlighter = new Highlighter()
		.setShow(true)
		.setSizeAdjust(10)
		.setTooltipLocation(TooltipLocations.NORTH)
		.setTooltipAxes(TooltipAxes.Y)
		.setTooltipFormatString("<b><i><span style='color:red;'>hello</span></i></b> %.2f")
		.setUseAxesFormatters(false);
		
		Cursor cursor = new Cursor()
		.setShow(true);
		
		Options options = new Options()
		.addOption(seriesDefaults)
		.addOption(axes)
		.addOption(highlighter)
		.addOption(cursor);
		
		chart = new DCharts().setDataSeries(dataSeries).setOptions(options).show();
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		mainLayout.addComponent(horizontalLayout_2);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		mainLayout.setExpandRatio(horizontalLayout_1, 1.0f);
		
		mainLayout.addComponent(chart);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("100.0%");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(false);
		
		// textAValue
		textAValue = new TextField();
		textAValue.setCaption("a");
		textAValue.setImmediate(false);
		textAValue.setWidth("-1px");
		textAValue.setHeight("-1px");
		horizontalLayout_2.addComponent(textAValue);
		
		// textBValue
		textBValue = new TextField();
		textBValue.setCaption("b");
		textBValue.setImmediate(false);
		textBValue.setWidth("-1px");
		textBValue.setHeight("-1px");
		horizontalLayout_2.addComponent(textBValue);
		
		// textCValue
		textCValue = new TextField();
		textCValue.setCaption("c");
		textCValue.setImmediate(false);
		textCValue.setWidth("-1px");
		textCValue.setHeight("-1px");
		horizontalLayout_2.addComponent(textCValue);
		
		// button_1
		button_1 = new Button();
		button_1.setCaption("Print");
		button_1.setImmediate(true);
		button_1.setWidth("-1px");
		button_1.setHeight("100.0%");
		horizontalLayout_2.addComponent(button_1);
		
		return horizontalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("100.0%");
		horizontalLayout_1.setMargin(false);
		
		// dCharts_1
		dCharts_1 = new DCharts();
		dCharts_1.setImmediate(false);
		dCharts_1.setWidth("-1px");
		dCharts_1.setHeight("-1px");
		horizontalLayout_1.addComponent(dCharts_1);
		
		return horizontalLayout_1;
	}
}
